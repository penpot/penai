name: Linting, Types and Docs Check

# only on PR to main and on each push to the PR
on:
  pull_request:
    branches:
      - main
  push:
    branches:
        - main
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: false

jobs:
  check:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    permissions:
      id-token: write
      pages: write
      actions: write
      contents: read
    steps:
      # Enable tmate debugging of manually-triggered workflows if the input option was provided
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}
      - name: Cancel previous run
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
      # use poetry and cache installed packages, see https://github.com/marketplace/actions/python-poetry-action
      - name: Install poetry
        uses: abatilo/actions-poetry@v2
      - name: Setup a local virtual environment (if no poetry.toml file)
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local
      - uses: actions/cache@v3
        name: Define a cache for the virtual environment based on the dependencies lock file
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}
      - name: Install the project dependencies
        run: |
          poetry install --with dev
      - name: Lint
        run: poetry run poe lint
      - name: Types
        run: poetry run poe type-check
      - name: Docs
        env:
          GOOGLE_STORAGE_KEY: ${{ secrets.GOOGLE_STORAGE_KEY }}
          GOOGLE_STORAGE_SECRET: ${{ secrets.GOOGLE_STORAGE_SECRET }}
          PP_BACKEND_PASSWORD: ${{ secrets.PP_BACKEND_PASSWORD }}
        run: poetry run poe doc-build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: "docs/_build"
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
